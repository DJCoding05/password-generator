# Form implementation generated from reading ui file 'passwordgenerator.ui'
#
# Created by: PyQt6 UI code generator 6.3.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QApplication, QMainWindow, QPushButton, QDialog
import string
import pyperclip
import random

class CustomDialog(QDialog):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("Copied!")

        QBtn = QtWidgets.QDialogButtonBox.StandardButton.Ok

        self.buttonBox = QtWidgets.QDialogButtonBox(QBtn)
        self.buttonBox.accepted.connect(self.accept)
        self.buttonBox.rejected.connect(self.reject)

        self.layout = QtWidgets.QVBoxLayout()
        message = QtWidgets.QLabel("Password copied to Clipboard")
        self.layout.addWidget(message)
        self.layout.addWidget(self.buttonBox)
        self.setLayout(self.layout)

class Ui_PasswordGenerator(object):
    def __init__(self):
        super().__init__()
        self.useSymbols = False
        self.useNumbers = False
        self.useLowerCase = False
        self.useUpperCase = False

    def setupUi(self, PasswordGenerator):
        PasswordGenerator.setObjectName("PasswordGenerator")
        PasswordGenerator.resize(861, 523)
        self.centralwidget = QtWidgets.QWidget(PasswordGenerator)
        self.centralwidget.setObjectName("centralwidget")
        self.password_output = QtWidgets.QLineEdit(self.centralwidget)
        self.password_output.setGeometry(QtCore.QRect(420, 360, 401, 31))
        self.password_output.setObjectName("password_output")
        self.password_label = QtWidgets.QLabel(self.centralwidget)
        self.password_label.setGeometry(QtCore.QRect(20, 330, 391, 61))
        self.password_label.setObjectName("password_label")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 0, 811, 321))
        self.layoutWidget.setObjectName("layoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.layoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.symbols = QtWidgets.QCheckBox(self.layoutWidget)
        self.symbols.setObjectName("symbols")
        self.symbols.stateChanged.connect(self.useSymbolsClicked)
        self.gridLayout.addWidget(self.symbols, 1, 1, 1, 1)
        self.password_length = QtWidgets.QComboBox(self.layoutWidget)
        self.password_length.setObjectName("password_length")
        for i in range(0,127):
            self.password_length.addItem("")
        self.gridLayout.addWidget(self.password_length, 0, 1, 1, 1)

        self.lowercase = QtWidgets.QCheckBox(self.layoutWidget)
        self.lowercase.setObjectName("lowercase")
        self.lowercase.stateChanged.connect(self.useLowerCaseClicked)
        self.gridLayout.addWidget(self.lowercase, 3, 1, 1, 1)

        self.numbers = QtWidgets.QCheckBox(self.layoutWidget)
        self.numbers.setObjectName("numbers")
        self.numbers.stateChanged.connect(self.useNumbersClicked)
        self.gridLayout.addWidget(self.numbers, 2, 1, 1, 1)

        self.password_length_label = QtWidgets.QLabel(self.layoutWidget)
        self.password_length_label.setObjectName("password_length_label")
        self.gridLayout.addWidget(self.password_length_label, 0, 0, 1, 1)

        self.numbers_label = QtWidgets.QLabel(self.layoutWidget)
        self.numbers_label.setObjectName("numbers_label")
        self.gridLayout.addWidget(self.numbers_label, 2, 0, 1, 1)

        self.uppercase = QtWidgets.QCheckBox(self.layoutWidget)
        self.uppercase.setObjectName("uppercase")
        self.uppercase.stateChanged.connect(self.useUpperCaseClicked)
        self.gridLayout.addWidget(self.uppercase, 4, 1, 1, 1)

        self.uppercase_label = QtWidgets.QLabel(self.layoutWidget)
        self.uppercase_label.setObjectName("uppercase_label")
        self.gridLayout.addWidget(self.uppercase_label, 4, 0, 1, 1)

        self.lowercase_label = QtWidgets.QLabel(self.layoutWidget)
        self.lowercase_label.setObjectName("lowercase_label")
        self.gridLayout.addWidget(self.lowercase_label, 3, 0, 1, 1)

        self.symbols_label = QtWidgets.QLabel(self.layoutWidget)
        self.symbols_label.setObjectName("symbols_label")
        self.gridLayout.addWidget(self.symbols_label, 1, 0, 1, 1)

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(420, 330, 401, 24))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.generateButtonClicked)

        PasswordGenerator.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(PasswordGenerator)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 861, 22))
        self.menubar.setObjectName("menubar")
        PasswordGenerator.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(PasswordGenerator)
        self.statusbar.setObjectName("statusbar")
        PasswordGenerator.setStatusBar(self.statusbar)

        self.retranslateUi(PasswordGenerator)
        QtCore.QMetaObject.connectSlotsByName(PasswordGenerator)

    def retranslateUi(self, PasswordGenerator):
        _translate = QtCore.QCoreApplication.translate
        PasswordGenerator.setWindowTitle(_translate("PasswordGenerator", "Password Generator"))
        self.password_label.setText(_translate("PasswordGenerator", "Password"))
        self.symbols.setText(_translate("PasswordGenerator", "( e.g. @#$%)"))
        self.password_length.setItemText(0, _translate("PasswordGenerator", "6"))
        for i in range(0,128):
            self.password_length.setItemText(i, _translate("PasswordGenerator", f"{i+6}"))
        self.password_length.setItemText(123, _translate("PasswordGenerator", "256"))
        self.password_length.setItemText(124, _translate("PasswordGenerator", "512"))
        self.password_length.setItemText(125, _translate("PasswordGenerator", "1048"))
        self.password_length.setItemText(126, _translate("PasswordGenerator", "2048"))
        self.lowercase.setText(_translate("PasswordGenerator", "( e.g. abcdefgh )"))
        self.numbers.setText(_translate("PasswordGenerator", "( e.g. 123456)"))
        self.password_length_label.setText(_translate("PasswordGenerator", "Password Length"))
        self.numbers_label.setText(_translate("PasswordGenerator", "Include Numbers:"))
        self.uppercase.setText(_translate("PasswordGenerator", "( e.g. ABCDEFGH )"))
        self.uppercase_label.setText(_translate("PasswordGenerator", "Include Uppercase Characters:"))
        self.lowercase_label.setText(_translate("PasswordGenerator", "Include Lowercase Characters:"))
        self.symbols_label.setText(_translate("PasswordGenerator", "Include Symbols:"))
        self.pushButton.setText(_translate("PasswordGenerator", "GeneratePassword"))

    def useSymbolsClicked(self):
        if self.symbols.isChecked():
            self.useSymbols = True
        else:
            self.useSymbols = False

    def useNumbersClicked(self):
        if self.numbers.isChecked():
            self.useNumbers = True
        else:
            self.useNumbers = False

    def useLowerCaseClicked(self):
        if self.lowercase.isChecked():
            self.useLowerCase = True
        else:
            self.useLowerCase = False

    def useUpperCaseClicked(self):
        if self.uppercase.isChecked():
            self.useUpperCase = True
        else:
            self.useUpperCase = False

    def generateCharacters(self):
        listOfCharacters = []
        if self.useSymbols:
            listOfCharacters.extend([*"!@#$%^&*()"])
        if self.useNumbers:
            listOfCharacters.extend([*string.digits])
        if self.useLowerCase:
            listOfCharacters.extend([*string.ascii_lowercase])
        if self.useUpperCase:
            listOfCharacters.extend([*string.ascii_uppercase])
        return listOfCharacters

    def generateButtonClicked(self):
        listOfCharacters = self.generateCharacters()
        password = ""
        for i in range(int(self.password_length.currentText())):
            password += random.choice(listOfCharacters)
            self.password_output.setText(password)
        pyperclip.copy(self.password_output.text())
        print("Password Has Been Copied")
        dlg = CustomDialog()
        if dlg.exec():
            print("Success!")
        else:
            print("Cancel!")

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    PasswordGenerator = QtWidgets.QMainWindow()
    ui = Ui_PasswordGenerator()
    ui.setupUi(PasswordGenerator)
    PasswordGenerator.show()
    sys.exit(app.exec())
